name: Check Daily Commits

on:
  schedule:
    # Runs at 9:30 PM Pacific time every day
    - cron: '30 21 * * *'
  workflow_dispatch: 

jobs:
  check-commits:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check for commits
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const username = context.repo.owner;
          let commitFound = false;
          
          console.log(`Checking commits for user: ${username}`);
          
          try {
            const query = `query($username:String!, $from:DateTime!, $to:DateTime!) {
              user(login: $username) {
                contributionsCollection(from: $from, to: $to) {
                  totalCommitContributions
                  commitContributionsByRepository {
                    repository {
                      name
                      isPrivate
                    }
                    contributions(first: 100) {
                      nodes {
                        occurredAt
                        commitCount
                      }
                    }
                  }
                }
              }
            }`;
            
            // Set the time range for today in PST/PDT
            const now = new Date();
            
            // Convert to PST/PDT (UTC-8)
            const pstOffset = -8 * 60; // -8 hours in minutes
            const localOffset = now.getTimezoneOffset();
            const totalOffset = pstOffset - localOffset;
            
            // Adjust the date to PST/PDT
            const pstNow = new Date(now.getTime() + totalOffset * 60 * 1000);
            const startOfDay = new Date(pstNow);
            startOfDay.setHours(0,0,0,0);
            const endOfDay = new Date(pstNow);
            endOfDay.setHours(23,59,59,999);
            
            const variables = {
              username: username,
              from: startOfDay.toISOString(),
              to: endOfDay.toISOString()
            };
            
            console.log('Time range being checked (PST/PDT):', {
              from: startOfDay.toLocaleString('en-US', { timeZone: 'America/Los_Angeles' }),
              to: endOfDay.toLocaleString('en-US', { timeZone: 'America/Los_Angeles' }),
              currentTime: pstNow.toLocaleString('en-US', { timeZone: 'America/Los_Angeles' })
            });
            
            const result = await github.graphql(query, variables);
            console.log('API Response:', JSON.stringify(result, null, 2));
            
            const totalCommits = result.user.contributionsCollection.totalCommitContributions;
            console.log(`Total commits today: ${totalCommits}`);
            
            // Check if there are any commits today
            if (totalCommits > 0) {
              commitFound = true;
              console.log('Found commits today!');
              
              // Log details of where the commits were found
              const contributions = result.user.contributionsCollection.commitContributionsByRepository;
              for (const repoContrib of contributions) {
                const repoName = repoContrib.repository.name;
                const isPrivate = repoContrib.repository.isPrivate;
                const commits = repoContrib.contributions.nodes;
                
                if (commits.length > 0) {
                  console.log(`Repository: ${repoName} (${isPrivate ? 'private' : 'public'})`);
                  commits.forEach(commit => {
                    console.log(`  - ${commit.commitCount} commits at ${new Date(commit.occurredAt).toLocaleString()}`);
                  });
                }
              }
            }
          } catch (error) {
            console.error('Error fetching commits:', error);
            throw error;
          }
          
          console.log('\n=== Final Result ===');
          console.log('Commit found:', commitFound);
          
          if (!commitFound) {
            // If no commit found, send notification via webhook
            const webhook_url = process.env.WEBHOOK_URL;
            const webhook_secret = process.env.WEBHOOK_SECRET;
            
            await fetch(webhook_url, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-Webhook-Secret': webhook_secret
              },
              body: JSON.stringify({
                message: "Don't forget to make your daily commit!"
              })
            });
          }

    env:
      WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
      TZ: America/Los_Angeles

permissions:
  contents: read
  actions: read
